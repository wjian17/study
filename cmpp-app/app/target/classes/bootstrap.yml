server:
  servlet:
    context-path: /${spring.application.name}
  port: 8081

spring:
  profiles:
    active: local
  application:
    name: app
  security:
    user:
      name: cmp
      password: cmp
  cloud:
    nacos:
      config:
        server-addr: 127.0.0.1:8848
        prefix: ${spring.application.name}
        file-extension: yaml
        group: config
        namespace: d3795939-aefc-4d4e-ae01-6914bcefec34
        shared-configs:
          - data-id: application-${spring.profiles.active}.yaml
            refresh: true
            group: config
      discovery:
        server-addr: 127.0.0.1:8848
        group: config
        namespace: d3795939-aefc-4d4e-ae01-6914bcefec34
  flyway:
    enabled: false


  #management:
  #  endpoints:
  #    web:
  #      exposure:
  #        include: *

  #    config:
  #      fail-fast: true
  #      name: ${spring.application.name}
  #      profile: ${spring.profiles.active}
  #      discovery:
  #        enabled: true
  #        service-id: config


config:
  oauth-resource:
    enable: true

#eureka:
#  instance:
#    # eureka client 发送 serverd端 心跳
#    lease-renewal-interval-in-seconds: 5
#    # 收到心跳后，下一次心跳等待超时时间，超时移除instance
#    lease-expiration-duration-in-seconds: 10
#    # ip地址注册到服务器中心，相互注册用ip
#    prefer-ip-address: true
#    metadata-map:
#      instanceId: ${spring.application.name}-${server.port}
##    hostname: springcloud-cmp
##    instance-id: ${eureka.instance.hostname}:${server.port}
#  server:
#    # 清理无效节点的间隔
#    eviction-interval-timer-in-ms: 30000
#    # 自我保护配置，主要用于网络通信偶发问题
#    enable-self-preservation: false
#    # 自我保护机制阈值
#    renewal-percent-threshold: 0.5
#  client:
#    # 从 eureka服务其中获取注册实例时间间隔
#    registry-fetch-interval-seconds: 2
#    # 注册到eureka
#    register-with-eureka: true
#    # 拉去注册实例
#    fetch-registry: true
#    service-url:
#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/registry/eureka